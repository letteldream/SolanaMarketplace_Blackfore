{
  "contractName": "ClashingImplementation",
  "abi": [
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegatedFunction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegatedFunction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation contract with an admin() function made to clash withTransparentUpgradeableProxy's to test correct functioning of theTransparent Proxy feature.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol\":\"ClashingImplementation\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol\":{\"keccak256\":\"0xf2b9b8ba52c7d6a5d89efffdfd4e02355898c8497b4a82f17cf482dd15426a0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b844d13bd58ea5d3609afb24fcd802860abda8166543dde9aa62c54920be11eb\",\"dweb:/ipfs/QmV27MzAK7BHWQpP9mzXZu6QRhTaqDoVtivAqUNLuWPwdH\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610154806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063abf8e0e71461003b578063f851a44014610059575b600080fd5b610043610077565b60405161005091906100a7565b60405180910390f35b610061610080565b60405161006e9190610103565b60405180910390f35b60006001905090565b60006311111142905090565b60008115159050919050565b6100a18161008c565b82525050565b60006020820190506100bc6000830184610098565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ed826100c2565b9050919050565b6100fd816100e2565b82525050565b600060208201905061011860008301846100f4565b9291505056fea2646970667358221220ac745978d6c4ecf2b67dff4071db2fa8abd4fe904c7bb91a0e76a9d886a1f23364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063abf8e0e71461003b578063f851a44014610059575b600080fd5b610043610077565b60405161005091906100a7565b60405180910390f35b610061610080565b60405161006e9190610103565b60405180910390f35b60006001905090565b60006311111142905090565b60008115159050919050565b6100a18161008c565b82525050565b60006020820190506100bc6000830184610098565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ed826100c2565b9050919050565b6100fd816100e2565b82525050565b600060208201905061011860008301846100f4565b9291505056fea2646970667358221220ac745978d6c4ecf2b67dff4071db2fa8abd4fe904c7bb91a0e76a9d886a1f23364736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1017:241",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:241",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:241",
                "type": ""
              }
            ],
            "src": "7:90:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:241"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:241",
                "type": ""
              }
            ],
            "src": "103:109:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:241",
                "type": ""
              }
            ],
            "src": "218:210:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "479:81:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "489:65:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "504:5:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:42:241",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "500:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:54:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "489:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "461:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "471:7:241",
                "type": ""
              }
            ],
            "src": "434:126:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:51:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "621:35:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "650:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "632:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:24:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "621:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "593:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "603:7:241",
                "type": ""
              }
            ],
            "src": "566:96:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "750:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "773:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "755:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:37:241"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "721:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "728:3:241",
                "type": ""
              }
            ],
            "src": "668:118:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:124:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "980:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "993:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1004:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "989:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "989:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "936:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "936:71:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "862:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "874:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "885:4:241",
                "type": ""
              }
            ],
            "src": "792:222:241"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 241,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "259:255:72:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "259:255:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;423:88;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;298:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;423:88;475:4;499;492:11;;423:88;:::o;298:117::-;338:7;365:42;358:49;;298:117;:::o;7:90:241:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Implementation contract with an admin() function made to clash with\r\n * @dev TransparentUpgradeableProxy's to test correct functioning of the\r\n * @dev Transparent Proxy feature.\r\n */\r\ncontract ClashingImplementation {\r\n    function admin() external pure returns (address) {\r\n        return 0x0000000000000000000000000000000011111142;\r\n    }\r\n\r\n    function delegatedFunction() external pure returns (bool) {\r\n        return true;\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Climax\\NFT-marketplace\\contracts\\openzeppelin-solidity\\contracts\\mocks\\ClashingImplementation.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol",
    "exportedSymbols": {
      "ClashingImplementation": [
        8251
      ]
    },
    "id": 8252,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8233,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:72"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ClashingImplementation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8234,
          "nodeType": "StructuredDocumentation",
          "src": "62:195:72",
          "text": " @dev Implementation contract with an admin() function made to clash with\n @dev TransparentUpgradeableProxy's to test correct functioning of the\n @dev Transparent Proxy feature."
        },
        "fullyImplemented": true,
        "id": 8251,
        "linearizedBaseContracts": [
          8251
        ],
        "name": "ClashingImplementation",
        "nameLocation": "268:22:72",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8241,
              "nodeType": "Block",
              "src": "347:68:72",
              "statements": [
                {
                  "expression": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303131313131313432",
                    "id": 8239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "365:42:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x0000000000000000000000000000000011111142"
                  },
                  "functionReturnParameters": 8238,
                  "id": 8240,
                  "nodeType": "Return",
                  "src": "358:49:72"
                }
              ]
            },
            "functionSelector": "f851a440",
            "id": 8242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "admin",
            "nameLocation": "307:5:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:72"
            },
            "returnParameters": {
              "id": 8238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8242,
                  "src": "338:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:9:72"
            },
            "scope": 8251,
            "src": "298:117:72",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8249,
              "nodeType": "Block",
              "src": "481:30:72",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "499:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8246,
                  "id": 8248,
                  "nodeType": "Return",
                  "src": "492:11:72"
                }
              ]
            },
            "functionSelector": "abf8e0e7",
            "id": 8250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedFunction",
            "nameLocation": "432:17:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:2:72"
            },
            "returnParameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8250,
                  "src": "475:4:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:6:72"
            },
            "scope": 8251,
            "src": "423:88:72",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8252,
        "src": "259:255:72",
        "usedErrors": []
      }
    ],
    "src": "35:481:72"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/mocks/ClashingImplementation.sol",
    "exportedSymbols": {
      "ClashingImplementation": [
        8251
      ]
    },
    "id": 8252,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8233,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:72"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ClashingImplementation",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8234,
          "nodeType": "StructuredDocumentation",
          "src": "62:195:72",
          "text": " @dev Implementation contract with an admin() function made to clash with\n @dev TransparentUpgradeableProxy's to test correct functioning of the\n @dev Transparent Proxy feature."
        },
        "fullyImplemented": true,
        "id": 8251,
        "linearizedBaseContracts": [
          8251
        ],
        "name": "ClashingImplementation",
        "nameLocation": "268:22:72",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8241,
              "nodeType": "Block",
              "src": "347:68:72",
              "statements": [
                {
                  "expression": {
                    "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303131313131313432",
                    "id": 8239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "365:42:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x0000000000000000000000000000000011111142"
                  },
                  "functionReturnParameters": 8238,
                  "id": 8240,
                  "nodeType": "Return",
                  "src": "358:49:72"
                }
              ]
            },
            "functionSelector": "f851a440",
            "id": 8242,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "admin",
            "nameLocation": "307:5:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:72"
            },
            "returnParameters": {
              "id": 8238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8237,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8242,
                  "src": "338:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:9:72"
            },
            "scope": 8251,
            "src": "298:117:72",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8249,
              "nodeType": "Block",
              "src": "481:30:72",
              "statements": [
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 8247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "499:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 8246,
                  "id": 8248,
                  "nodeType": "Return",
                  "src": "492:11:72"
                }
              ]
            },
            "functionSelector": "abf8e0e7",
            "id": 8250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "delegatedFunction",
            "nameLocation": "432:17:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "449:2:72"
            },
            "returnParameters": {
              "id": 8246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8250,
                  "src": "475:4:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8244,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "475:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "474:6:72"
            },
            "scope": 8251,
            "src": "423:88:72",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8252,
        "src": "259:255:72",
        "usedErrors": []
      }
    ],
    "src": "35:481:72"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-26T11:45:25.343Z",
  "devdoc": {
    "details": "Implementation contract with an admin() function made to clash withTransparentUpgradeableProxy's to test correct functioning of theTransparent Proxy feature.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}