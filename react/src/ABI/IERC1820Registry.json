{
  "contractName": "IERC1820Registry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "InterfaceImplementerSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newManager",
          "type": "address"
        }
      ],
      "name": "setManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "implementer",
          "type": "address"
        }
      ],
      "name": "setInterfaceImplementer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_interfaceHash",
          "type": "bytes32"
        }
      ],
      "name": "getInterfaceImplementer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "interfaceName",
          "type": "string"
        }
      ],
      "name": "interfaceHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "updateERC165Cache",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165Interface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "implementsERC165InterfaceNoCache",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Registry.sol\":{\"keccak256\":\"0x54d5af0171b5f6c82a9103099e80163e17d02437a1fff8944c624d6081a868ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35f2df2d36630a291e01f6926abade1cb873789c170e7c5a56c92128edb8d5c1\",\"dweb:/ipfs/QmXcsuN2CcrFfNoyQmdL31US3KkWF8RNpTKRG5RreV62Si\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the global ERC1820 Registry, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\r\n * implementers for interfaces in this registry, as well as query support.\r\n *\r\n * Implementers may be shared by multiple accounts, and can also implement more\r\n * than a single interface for each account. Contracts can implement interfaces\r\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\r\n * contract.\r\n *\r\n * {IERC165} interfaces can also be queried via the registry.\r\n *\r\n * For an in-depth explanation and source code analysis, see the EIP text.\r\n */\r\ninterface IERC1820Registry {\r\n    /**\r\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\r\n     * account is able to set interface implementers for it.\r\n     *\r\n     * By default, each account is its own manager. Passing a value of `0x0` in\r\n     * `newManager` will reset the manager to this initial state.\r\n     *\r\n     * Emits a {ManagerChanged} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     */\r\n    function setManager(address account, address newManager) external;\r\n\r\n    /**\r\n     * @dev Returns the manager for `account`.\r\n     *\r\n     * See {setManager}.\r\n     */\r\n    function getManager(address account) external view returns (address);\r\n\r\n    /**\r\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\r\n     * `interfaceHash`.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     * The zero address can also be used in `implementer` to remove an old one.\r\n     *\r\n     * See {interfaceHash} to learn how these are created.\r\n     *\r\n     * Emits an {InterfaceImplementerSet} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the current manager for `account`.\r\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\r\n     * end in 28 zeroes).\r\n     * - `implementer` must implement {IERC1820Implementer} and return true when\r\n     * queried for support, unless `implementer` is the caller. See\r\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\r\n     */\r\n    function setInterfaceImplementer(\r\n        address account,\r\n        bytes32 _interfaceHash,\r\n        address implementer\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\r\n     * implementer is registered, returns the zero address.\r\n     *\r\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\r\n     * zeroes), `account` will be queried for support of it.\r\n     *\r\n     * `account` being the zero address is an alias for the caller's address.\r\n     */\r\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\r\n     * corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\r\n     */\r\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\r\n\r\n    /**\r\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\r\n     * @param account Address of the contract for which to update the cache.\r\n     * @param interfaceId ERC165 interface for which to update the cache.\r\n     */\r\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\r\n\r\n    /**\r\n     * @notice Checks whether a contract implements an ERC165 interface or not.\r\n     * If the result is not cached a direct lookup on the contract address is performed.\r\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\r\n     * {updateERC165Cache} with the contract address.\r\n     * @param account Address of the contract to check.\r\n     * @param interfaceId ERC165 interface to check.\r\n     * @return True if `account` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    /**\r\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\r\n     * @param account Address of the contract to check.\r\n     * @param interfaceId ERC165 interface to check.\r\n     * @return True if `account` implements `interfaceId`, false otherwise.\r\n     */\r\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\r\n\r\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\r\n\r\n    event ManagerChanged(address indexed account, address indexed newManager);\r\n}\r\n",
  "sourcePath": "C:\\Climax\\NFT-marketplace\\contracts\\openzeppelin-solidity\\contracts\\utils\\introspection\\IERC1820Registry.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        27223
      ]
    },
    "id": 27224,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:226"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1820Registry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 27136,
          "nodeType": "StructuredDocumentation",
          "src": "62:632:226",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "id": 27223,
        "linearizedBaseContracts": [
          27223
        ],
        "name": "IERC1820Registry",
        "nameLocation": "706:16:226",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 27137,
              "nodeType": "StructuredDocumentation",
              "src": "730:457:226",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "id": 27144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1202:10:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27139,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1221:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27144,
                  "src": "1213:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27141,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1238:10:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27144,
                  "src": "1230:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:37:226"
            },
            "returnParameters": {
              "id": 27143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:226"
            },
            "scope": 27223,
            "src": "1193:66:226",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27145,
              "nodeType": "StructuredDocumentation",
              "src": "1267:94:226",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "id": 27152,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1376:10:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27147,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1395:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27152,
                  "src": "1387:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:17:226"
            },
            "returnParameters": {
              "id": 27151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27152,
                  "src": "1427:7:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:9:226"
            },
            "scope": 27223,
            "src": "1367:69:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27153,
              "nodeType": "StructuredDocumentation",
              "src": "1444:834:226",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "id": 27162,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2293:23:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27155,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2335:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27162,
                  "src": "2327:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27157,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2361:14:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27162,
                  "src": "2353:22:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27156,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27159,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2394:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27162,
                  "src": "2386:19:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:96:226"
            },
            "returnParameters": {
              "id": 27161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:0:226"
            },
            "scope": 27223,
            "src": "2284:138:226",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27163,
              "nodeType": "StructuredDocumentation",
              "src": "2430:390:226",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "id": 27172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "2835:23:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27165,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2867:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27172,
                  "src": "2859:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2859:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27167,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2884:14:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27172,
                  "src": "2876:22:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27166,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2858:41:226"
            },
            "returnParameters": {
              "id": 27171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27172,
                  "src": "2923:7:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2922:9:226"
            },
            "scope": 27223,
            "src": "2826:106:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27173,
              "nodeType": "StructuredDocumentation",
              "src": "2940:200:226",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "id": 27180,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3155:13:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27175,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3185:13:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27180,
                  "src": "3169:29:226",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27174,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3169:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3168:31:226"
            },
            "returnParameters": {
              "id": 27179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27180,
                  "src": "3223:7:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27177,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:9:226"
            },
            "scope": 27223,
            "src": "3146:86:226",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27181,
              "nodeType": "StructuredDocumentation",
              "src": "3240:264:226",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "id": 27188,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3519:17:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27183,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3545:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27188,
                  "src": "3537:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27185,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3561:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27188,
                  "src": "3554:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27184,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3536:37:226"
            },
            "returnParameters": {
              "id": 27187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3582:0:226"
            },
            "scope": 27223,
            "src": "3510:73:226",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27189,
              "nodeType": "StructuredDocumentation",
              "src": "3591:544:226",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "id": 27198,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4150:25:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27191,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4184:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27198,
                  "src": "4176:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27193,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4200:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27198,
                  "src": "4193:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27192,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4193:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:37:226"
            },
            "returnParameters": {
              "id": 27197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27198,
                  "src": "4236:4:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:4:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4235:6:226"
            },
            "scope": 27223,
            "src": "4141:101:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27199,
              "nodeType": "StructuredDocumentation",
              "src": "4250:318:226",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "id": 27208,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4583:32:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27201,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4624:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27208,
                  "src": "4616:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27203,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4640:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27208,
                  "src": "4633:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27202,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4633:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4615:37:226"
            },
            "returnParameters": {
              "id": 27207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27208,
                  "src": "4676:4:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:4:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4675:6:226"
            },
            "scope": 27223,
            "src": "4574:108:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 27216,
            "name": "InterfaceImplementerSet",
            "nameLocation": "4696:23:226",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4736:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "4720:23:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27212,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "4761:13:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "4745:29:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4745:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27214,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "4792:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "4776:27:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4776:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:85:226"
            },
            "src": "4690:115:226"
          },
          {
            "anonymous": false,
            "id": 27222,
            "name": "ManagerChanged",
            "nameLocation": "4819:14:226",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27218,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4850:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27222,
                  "src": "4834:23:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27220,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "4875:10:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27222,
                  "src": "4859:26:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4833:53:226"
            },
            "src": "4813:74:226"
          }
        ],
        "scope": 27224,
        "src": "696:4194:226",
        "usedErrors": []
      }
    ],
    "src": "35:4857:226"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Registry.sol",
    "exportedSymbols": {
      "IERC1820Registry": [
        27223
      ]
    },
    "id": 27224,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 27135,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:226"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC1820Registry",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 27136,
          "nodeType": "StructuredDocumentation",
          "src": "62:632:226",
          "text": " @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."
        },
        "fullyImplemented": false,
        "id": 27223,
        "linearizedBaseContracts": [
          27223
        ],
        "name": "IERC1820Registry",
        "nameLocation": "706:16:226",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 27137,
              "nodeType": "StructuredDocumentation",
              "src": "730:457:226",
              "text": " @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."
            },
            "functionSelector": "5df8122f",
            "id": 27144,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setManager",
            "nameLocation": "1202:10:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27142,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27139,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1221:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27144,
                  "src": "1213:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27141,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "1238:10:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27144,
                  "src": "1230:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:37:226"
            },
            "returnParameters": {
              "id": 27143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1258:0:226"
            },
            "scope": 27223,
            "src": "1193:66:226",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27145,
              "nodeType": "StructuredDocumentation",
              "src": "1267:94:226",
              "text": " @dev Returns the manager for `account`.\n See {setManager}."
            },
            "functionSelector": "3d584063",
            "id": 27152,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getManager",
            "nameLocation": "1376:10:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27148,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27147,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1395:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27152,
                  "src": "1387:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:17:226"
            },
            "returnParameters": {
              "id": 27151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27152,
                  "src": "1427:7:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1427:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1426:9:226"
            },
            "scope": 27223,
            "src": "1367:69:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27153,
              "nodeType": "StructuredDocumentation",
              "src": "1444:834:226",
              "text": " @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."
            },
            "functionSelector": "29965a1d",
            "id": 27162,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setInterfaceImplementer",
            "nameLocation": "2293:23:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27155,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2335:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27162,
                  "src": "2327:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27154,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2327:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27157,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2361:14:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27162,
                  "src": "2353:22:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27156,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2353:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27159,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "2394:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27162,
                  "src": "2386:19:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2386:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2316:96:226"
            },
            "returnParameters": {
              "id": 27161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2421:0:226"
            },
            "scope": 27223,
            "src": "2284:138:226",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27163,
              "nodeType": "StructuredDocumentation",
              "src": "2430:390:226",
              "text": " @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."
            },
            "functionSelector": "aabbb8ca",
            "id": 27172,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getInterfaceImplementer",
            "nameLocation": "2835:23:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27165,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2867:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27172,
                  "src": "2859:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2859:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27167,
                  "mutability": "mutable",
                  "name": "_interfaceHash",
                  "nameLocation": "2884:14:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27172,
                  "src": "2876:22:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27166,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2858:41:226"
            },
            "returnParameters": {
              "id": 27171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27170,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27172,
                  "src": "2923:7:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2922:9:226"
            },
            "scope": 27223,
            "src": "2826:106:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27173,
              "nodeType": "StructuredDocumentation",
              "src": "2940:200:226",
              "text": " @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
            },
            "functionSelector": "65ba36c1",
            "id": 27180,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "interfaceHash",
            "nameLocation": "3155:13:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27175,
                  "mutability": "mutable",
                  "name": "interfaceName",
                  "nameLocation": "3185:13:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27180,
                  "src": "3169:29:226",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 27174,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3169:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3168:31:226"
            },
            "returnParameters": {
              "id": 27179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27178,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27180,
                  "src": "3223:7:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27177,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:9:226"
            },
            "scope": 27223,
            "src": "3146:86:226",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27181,
              "nodeType": "StructuredDocumentation",
              "src": "3240:264:226",
              "text": " @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."
            },
            "functionSelector": "a41e7d51",
            "id": 27188,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateERC165Cache",
            "nameLocation": "3519:17:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27186,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27183,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3545:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27188,
                  "src": "3537:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3537:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27185,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "3561:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27188,
                  "src": "3554:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27184,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "3554:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3536:37:226"
            },
            "returnParameters": {
              "id": 27187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3582:0:226"
            },
            "scope": 27223,
            "src": "3510:73:226",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27189,
              "nodeType": "StructuredDocumentation",
              "src": "3591:544:226",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "f712f3e8",
            "id": 27198,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165Interface",
            "nameLocation": "4150:25:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27191,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4184:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27198,
                  "src": "4176:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4176:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27193,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4200:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27198,
                  "src": "4193:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27192,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4193:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4175:37:226"
            },
            "returnParameters": {
              "id": 27197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27196,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27198,
                  "src": "4236:4:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27195,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4236:4:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4235:6:226"
            },
            "scope": 27223,
            "src": "4141:101:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 27199,
              "nodeType": "StructuredDocumentation",
              "src": "4250:318:226",
              "text": " @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."
            },
            "functionSelector": "b7056765",
            "id": 27208,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "implementsERC165InterfaceNoCache",
            "nameLocation": "4583:32:226",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27201,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4624:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27208,
                  "src": "4616:15:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4616:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27203,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "4640:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27208,
                  "src": "4633:18:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 27202,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "4633:6:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4615:37:226"
            },
            "returnParameters": {
              "id": 27207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 27208,
                  "src": "4676:4:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 27205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4676:4:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4675:6:226"
            },
            "scope": 27223,
            "src": "4574:108:226",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 27216,
            "name": "InterfaceImplementerSet",
            "nameLocation": "4696:23:226",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27210,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4736:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "4720:23:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27212,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "4761:13:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "4745:29:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27211,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4745:7:226",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27214,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "implementer",
                  "nameLocation": "4792:11:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27216,
                  "src": "4776:27:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4776:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:85:226"
            },
            "src": "4690:115:226"
          },
          {
            "anonymous": false,
            "id": 27222,
            "name": "ManagerChanged",
            "nameLocation": "4819:14:226",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 27221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27218,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4850:7:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27222,
                  "src": "4834:23:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27217,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4834:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27220,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newManager",
                  "nameLocation": "4875:10:226",
                  "nodeType": "VariableDeclaration",
                  "scope": 27222,
                  "src": "4859:26:226",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 27219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4859:7:226",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4833:53:226"
            },
            "src": "4813:74:226"
          }
        ],
        "scope": 27224,
        "src": "696:4194:226",
        "usedErrors": []
      }
    ],
    "src": "35:4857:226"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-26T11:45:26.424Z",
  "devdoc": {
    "details": "Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.",
    "kind": "dev",
    "methods": {
      "getInterfaceImplementer(address,bytes32)": {
        "details": "Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."
      },
      "getManager(address)": {
        "details": "Returns the manager for `account`. See {setManager}."
      },
      "implementsERC165Interface(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "returns": {
          "_0": "True if `account` implements `interfaceId`, false otherwise."
        }
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "params": {
          "account": "Address of the contract to check.",
          "interfaceId": "ERC165 interface to check."
        },
        "returns": {
          "_0": "True if `account` implements `interfaceId`, false otherwise."
        }
      },
      "interfaceHash(string)": {
        "details": "Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."
      },
      "setInterfaceImplementer(address,bytes32,address)": {
        "details": "Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."
      },
      "setManager(address,address)": {
        "details": "Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."
      },
      "updateERC165Cache(address,bytes4)": {
        "params": {
          "account": "Address of the contract for which to update the cache.",
          "interfaceId": "ERC165 interface for which to update the cache."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "implementsERC165Interface(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."
      },
      "implementsERC165InterfaceNoCache(address,bytes4)": {
        "notice": "Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."
      },
      "updateERC165Cache(address,bytes4)": {
        "notice": "Updates the cache with whether the contract implements an ERC165 interface or not."
      }
    },
    "version": 1
  }
}