{
  "contractName": "ERC1820ImplementerMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "registerInterfaceForAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"canImplementInterfaceForAddress\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"registerInterfaceForAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"canImplementInterfaceForAddress(bytes32,address)\":{\"details\":\"See {IERC1820Implementer-canImplementInterfaceForAddress}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/openzeppelin-solidity/contracts/mocks/ERC1820ImplementerMock.sol\":\"ERC1820ImplementerMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/openzeppelin-solidity/contracts/mocks/ERC1820ImplementerMock.sol\":{\"keccak256\":\"0x6bc1ee31bbdf3c15380579aa640a42c2bcde152b07086aabcd12c1311d12bfb3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c412db77d6fed2140ff62eae5b7f37032c86064802f1bd1a604853c8ac23058\",\"dweb:/ipfs/QmTRsHcHNJMyjBSekRUS1A3BfibVvnzCdZ88FoAJR4yQDB\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/ERC1820Implementer.sol\":{\"keccak256\":\"0x7565d811737be32cbc1137f52df4e8debc5209e931c91cb364ac9d28e4e6447d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a02a0c1a63baec4cfe5ab093512387227b6ea95ce26864afe6d3e319e66d41ff\",\"dweb:/ipfs/Qme3ReawMctR8yDLPAZSy33PPEBptFfKPksU3QvWYK28qN\"]},\"project:/contracts/openzeppelin-solidity/contracts/utils/introspection/IERC1820Implementer.sol\":{\"keccak256\":\"0xa7d86a2886225a2904446fdc9319b861959ad2bd68583cf88b640d3db14b99f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fce8e5021e4053c46c7b34d2c05fb101ff4001a6fbc26e4bcbec708e181eae8\",\"dweb:/ipfs/QmUwA8xYYdbxYH6p5P269YjLoXWdr3NXVeunpzNfR98Xzq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506102d0806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b61005560048036038101906100509190610230565b610087565b604051610062919061027f565b60405180910390f35b61008560048036038101906100809190610230565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b6000819050919050565b6101af8161019c565b81146101ba57600080fd5b50565b6000813590506101cc816101a6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101fd826101d2565b9050919050565b61020d816101f2565b811461021857600080fd5b50565b60008135905061022a81610204565b92915050565b6000806040838503121561024757610246610197565b5b6000610255858286016101bd565b92505060206102668582860161021b565b9150509250929050565b6102798161019c565b82525050565b60006020820190506102946000830184610270565b9291505056fea264697066735822122036e8333c4151cca3b16c283f9b69ab1d90316fc6e1f93475b4f49f03e6a0626f64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b5780635536e45d1461006b575b600080fd5b61005560048036038101906100509190610230565b610087565b604051610062919061027f565b60405180910390f35b61008560048036038101906100809190610230565b61011d565b005b600080600084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166100f3576000801b610115565b7fa2ef4600d742022d532d4747cb3547474667d6f13804902513b2ec01c848f4b45b905092915050565b610127828261012b565b5050565b600160008084815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b600080fd5b6000819050919050565b6101af8161019c565b81146101ba57600080fd5b50565b6000813590506101cc816101a6565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101fd826101d2565b9050919050565b61020d816101f2565b811461021857600080fd5b50565b60008135905061022a81610204565b92915050565b6000806040838503121561024757610246610197565b5b6000610255858286016101bd565b92505060206102668582860161021b565b9150509250929050565b6102798161019c565b82525050565b60006020820190506102946000830184610270565b9291505056fea264697066735822122036e8333c4151cca3b16c283f9b69ab1d90316fc6e1f93475b4f49f03e6a0626f64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2026:241",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:241",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:241"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:241"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:241",
                "type": ""
              }
            ],
            "src": "7:75:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:241",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:241"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:241",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:241",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:241"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:241",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:241",
                "type": ""
              }
            ],
            "src": "334:77:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes32",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:241"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:241"
                }
              ]
            },
            "name": "validator_revert_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:241",
                "type": ""
              }
            ],
            "src": "417:122:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes32",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:241"
                }
              ]
            },
            "name": "abi_decode_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:241",
                "type": ""
              }
            ],
            "src": "545:139:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "735:81:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "745:65:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "760:5:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "767:42:241",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "756:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:54:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "745:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "717:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "727:7:241",
                "type": ""
              }
            ],
            "src": "690:126:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "867:51:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "877:35:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "906:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "888:17:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "888:24:241"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "877:7:241"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "849:5:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "859:7:241",
                "type": ""
              }
            ],
            "src": "822:96:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:79:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1024:16:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1033:1:241",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1036:1:241",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1026:6:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1026:12:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1026:12:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "990:5:241"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1015:5:241"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "997:17:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "997:24:241"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "987:2:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "987:35:241"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "980:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:43:241"
                  },
                  "nodeType": "YulIf",
                  "src": "977:63:241"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "960:5:241",
                "type": ""
              }
            ],
            "src": "924:122:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1104:87:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:29:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1136:6:241"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1123:12:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1123:20:241"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1114:5:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1179:5:241"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1152:26:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:33:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1152:33:241"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1082:6:241",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1090:3:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1098:5:241",
                "type": ""
              }
            ],
            "src": "1052:139:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:391:241",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1326:83:241",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1328:77:241"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1328:79:241"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1328:79:241"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:241"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1310:9:241"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1297:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1297:23:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1322:2:241",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1293:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:32:241"
                  },
                  "nodeType": "YulIf",
                  "src": "1290:119:241"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1419:117:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1434:15:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1448:1:241",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1438:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1463:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1498:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1509:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1494:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1494:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1518:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1473:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1473:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1463:6:241"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1546:118:241",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1561:16:241",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1575:2:241",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1565:6:241",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1591:63:241",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1626:9:241"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1637:6:241"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1622:3:241"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1622:22:241"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1646:7:241"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1601:20:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1601:53:241"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1591:6:241"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1242:9:241",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1253:7:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1265:6:241",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1273:6:241",
                "type": ""
              }
            ],
            "src": "1197:474:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1742:53:241",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1759:3:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1782:5:241"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bytes32",
                          "nodeType": "YulIdentifier",
                          "src": "1764:17:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1764:24:241"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1752:6:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1752:37:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1752:37:241"
                }
              ]
            },
            "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1730:5:241",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1737:3:241",
                "type": ""
              }
            ],
            "src": "1677:118:241"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1899:124:241",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1909:26:241",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1921:9:241"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1932:2:241",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1917:3:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1917:18:241"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1909:4:241"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1989:6:241"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2002:9:241"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2013:1:241",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1998:3:241"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1998:17:241"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1945:43:241"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1945:71:241"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1945:71:241"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1871:9:241",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1883:6:241",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1894:4:241",
                "type": ""
              }
            ],
            "src": "1801:222:241"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 241,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "121:219:93:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "121:219:93:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;739:288:223;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;182:155:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;739:288:223;903:7;935:20;:35;956:13;935:35;;;;;;;;;;;:44;971:7;935:44;;;;;;;;;;;;;;;;;;;;;;;;;:84;;1014:4;1006:13;;935:84;;;525:33;935:84;928:91;;739:288;;;;:::o;182:155:93:-;277:52;306:13;321:7;277:28;:52::i;:::-;182:155;;:::o;1271:165:223:-;1424:4;1377:20;:35;1398:13;1377:35;;;;;;;;;;;:44;1413:7;1377:44;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;1271:165;;:::o;88:117:241:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:96::-;859:7;888:24;906:5;888:24;:::i;:::-;877:35;;822:96;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/introspection/ERC1820Implementer.sol\";\r\n\r\ncontract ERC1820ImplementerMock is ERC1820Implementer {\r\n    function registerInterfaceForAddress(bytes32 interfaceHash, address account) public {\r\n        _registerInterfaceForAddress(interfaceHash, account);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Climax\\NFT-marketplace\\contracts\\openzeppelin-solidity\\contracts\\mocks\\ERC1820ImplementerMock.sol",
  "ast": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        27107
      ],
      "ERC1820ImplementerMock": [
        9569
      ],
      "IERC1820Implementer": [
        27133
      ]
    },
    "id": 9570,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9552,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:93"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 9553,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9570,
        "sourceUnit": 27108,
        "src": "62:55:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9554,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27107,
              "src": "156:18:93"
            },
            "id": 9555,
            "nodeType": "InheritanceSpecifier",
            "src": "156:18:93"
          }
        ],
        "canonicalName": "ERC1820ImplementerMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9569,
        "linearizedBaseContracts": [
          9569,
          27107,
          27133
        ],
        "name": "ERC1820ImplementerMock",
        "nameLocation": "130:22:93",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9567,
              "nodeType": "Block",
              "src": "266:71:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9563,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9557,
                        "src": "306:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9564,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9559,
                        "src": "321:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9562,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27106,
                      "src": "277:28:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 9565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:52:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9566,
                  "nodeType": "ExpressionStatement",
                  "src": "277:52:93"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 9568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nameLocation": "191:27:93",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9557,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "227:13:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 9568,
                  "src": "219:21:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9556,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9559,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "250:7:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 9568,
                  "src": "242:15:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "218:40:93"
            },
            "returnParameters": {
              "id": 9561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:93"
            },
            "scope": 9569,
            "src": "182:155:93",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9570,
        "src": "121:219:93",
        "usedErrors": []
      }
    ],
    "src": "35:307:93"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/mocks/ERC1820ImplementerMock.sol",
    "exportedSymbols": {
      "ERC1820Implementer": [
        27107
      ],
      "ERC1820ImplementerMock": [
        9569
      ],
      "IERC1820Implementer": [
        27133
      ]
    },
    "id": 9570,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9552,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:93"
      },
      {
        "absolutePath": "project:/contracts/openzeppelin-solidity/contracts/utils/introspection/ERC1820Implementer.sol",
        "file": "../utils/introspection/ERC1820Implementer.sol",
        "id": 9553,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9570,
        "sourceUnit": 27108,
        "src": "62:55:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9554,
              "name": "ERC1820Implementer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27107,
              "src": "156:18:93"
            },
            "id": 9555,
            "nodeType": "InheritanceSpecifier",
            "src": "156:18:93"
          }
        ],
        "canonicalName": "ERC1820ImplementerMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9569,
        "linearizedBaseContracts": [
          9569,
          27107,
          27133
        ],
        "name": "ERC1820ImplementerMock",
        "nameLocation": "130:22:93",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9567,
              "nodeType": "Block",
              "src": "266:71:93",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9563,
                        "name": "interfaceHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9557,
                        "src": "306:13:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 9564,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9559,
                        "src": "321:7:93",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9562,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27106,
                      "src": "277:28:93",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 9565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "277:52:93",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9566,
                  "nodeType": "ExpressionStatement",
                  "src": "277:52:93"
                }
              ]
            },
            "functionSelector": "5536e45d",
            "id": 9568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerInterfaceForAddress",
            "nameLocation": "191:27:93",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9557,
                  "mutability": "mutable",
                  "name": "interfaceHash",
                  "nameLocation": "227:13:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 9568,
                  "src": "219:21:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9556,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "219:7:93",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9559,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "250:7:93",
                  "nodeType": "VariableDeclaration",
                  "scope": 9568,
                  "src": "242:15:93",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:93",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "218:40:93"
            },
            "returnParameters": {
              "id": 9561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:93"
            },
            "scope": 9569,
            "src": "182:155:93",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 9570,
        "src": "121:219:93",
        "usedErrors": []
      }
    ],
    "src": "35:307:93"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-26T11:45:25.492Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "details": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}